import cv2
import numpy as np
import math
import time
#from MnExtractor import *

#-----------------------------
class MnMatcher:
    def listSwap(self, list1, list2):
        temp = list1
        list1 = list2
        list2 = temp
        return list1, list2
    
    def translateAllPoints(self, index1, index2, list1, list2):
        delta_x = list2[index2][0] - list1[index1][0] 
        delta_y = list2[index2][1] - list1[index1][1] 
        translated_point_list = []
        for i in range(len(list1)):
            new_x, new_y = self.translation(list1[i][0], list1[i][1], delta_x, delta_y)
            translated_point_list.append([new_x, new_y])
            
        return translated_point_list

    def translation(self, x1,y1,delta_x, delta_y):
        x1 = x1 + delta_x
        y1 = y1 + delta_y
        return x1, y1

    def allAboutRotations(self, index1, index2, list1, list2, index_of_rotation_pts):


        # 1. translate every input points to 0,0
        all_input_pts_at_originate = self.translatePointsToOrigin(index_of_rotation_pts,list1)

        # 1.2 translate every given points to 0,0
        all_given_pts_at_originate = self.translatePointsToOrigin(index_of_rotation_pts,list2)
        
        # 2. find angle
        rotation_angle = self.findAngle(all_input_pts_at_originate[index1][0],
                                   all_input_pts_at_originate[index1][1],
                                   all_given_pts_at_originate[index2][0],
                                   all_given_pts_at_originate[index2][1])
        if(rotation_angle == 1):
            return 0
        # 3. rotate
        all_original_rotated_pts = self.rotateAllPoints(rotation_angle, all_input_pts_at_originate)

        maxs = 0
        # 4. verify rotation
        # pointsVerification(input, given, acceptable radius)
        accuracy, error_rate = self.pointsVerification(all_original_rotated_pts,
                                                 all_given_pts_at_originate,
                                                 15)
        
        
        #if(accuracy > 0.8 and error_rate < 0.2):
        #    return accuracy
        return accuracy
        '''
        if(all_original_rotated_pts == all_given_pts_at_originate):
            print("=======================")
            print("======== TRUE =========")
            print("=======================")
            return 1
            
        return 0
        '''
        
    def findAngle(self, x1,y1,x2,y2):
        #https://www.wikihow.com/Find-the-Angle-Between-Two-Vectors
        #print("x1: ",x1,"| y1: ",y1,"| x2: ",x2,"| y2: ",y2,"|")
        
        uv = (x1 * x2) + (y1 * y2)
        __u__ = (x1**2 + y1**2)**0.5
        __v__ = (x2**2 + y2**2)**0.5

        if(( __u__ * __v__) == 0):
            return 1

        
        #print("uv: ",uv)
        #print("u: ", __u__)
        #print("v: ", __v__)
        #print("cos0: ", uv / ( __u__ * __v__))
        cosSeta = uv / ( __u__ * __v__)
        if(cosSeta > 1 or cosSeta < -1):
            cosSeta = 1
        angle = math.acos(cosSeta) # / math.pi * 180
        

        #angle = (math.pi * 2) - angle
        angle = (math.pi * 2) - (angle % (math.pi * 2))
        #print("rotation angle: ", (angle / math.pi * 180))
        return angle

    def translatePointsToOrigin(self, index_of_rotation_pts , list1):
        pts_at_origin = []
        for i in range(len(list1)):
            new_x, new_y = self.translation(list1[i][0],list1[i][1],list1[index_of_rotation_pts][0] * -1, list1[index_of_rotation_pts][1] * -1)
            pts_at_origin.append([new_x, new_y])

        #print("translate to origin: ",pts_at_origin)
        #print()
        
        return pts_at_origin
        

    def rotateAllPoints(self, angle, list1):
        rotated_pts = []
        #print("cos: ", round(math.cos(angle)))
        #print("sin: ", round(math.sin(angle)))
        cos_value = (math.cos(angle))
        sin_value = (math.sin(angle))
        #print("cos: ", cos_value)
        #print("sin: ", sin_value)
        for i in range(len(list1)):
            new_x = round((cos_value * list1[i][0]) + (sin_value * -1 * list1[i][1]))
            new_y = round((sin_value * list1[i][0]) + (cos_value * list1[i][1]))
            rotated_pts.append([new_x, new_y])

        #print("after rotate : ", rotated_pts)
        #print()

        return rotated_pts


    def pointsVerification(self, input_pts, given_pts,radius):
        total_given_pts = len(given_pts)
        total_input_pts = len(input_pts)
        match = 0
        not_match = 0
        '''
        for i in range(len(input_pts)):
            if(input_pts[i] in given_pts):
                match += 1
                given_pts.remove(input_pts[i])
            else:
                not_match += 1
        '''
        #with radius
        never_meet = 1
        for i in range(len(input_pts)):
            for j in range(len(given_pts)):
                if((input_pts[i][0] + radius >= given_pts[j][0] and given_pts[j][0] >= input_pts[i][0] - radius)
                   and
                   (input_pts[i][1] + radius >= given_pts[j][1] and given_pts[j][1] >= input_pts[i][1] - radius)):
                    match += 1
                    #print("POP:",given_pts.pop(j))
                    never_meet = 0
                    break
                
            if(never_meet == 1):
                not_match += 1
            else:
                never_meet = 1
            
        accuracy = match/total_input_pts
        error_rate = not_match/total_input_pts
        #print("ACCURACY: ", accuracy)
        #print("ERROR RATE: ", error_rate)
        return accuracy,error_rate


    ################ SAMPLING #####################################

    def samplingPoint(self, list1, size):
        step_size = int(len(list1)/size)
        sampling_set = []
        for i in range(0,10):
            sampling_set.append(list1[i])

        for i in range(100,110):
            sampling_set.append(list1[i])
        print("SAMPLING", sampling_set)
        return sampling_set

    def createSample4Part(self, list1, list2, sample_size):
        from_each_population = round(sample_size / 4)
        sample_list = []
        for i in range(from_each_population):
            sample_list.append(list1[i])
            
        for i in range(len(list1)- from_each_population, len(list1)):
            sample_list.append(list1[i])

        for i in range(from_each_population):
            sample_list.append(list2[i])
            
        for i in range(len(list2)- from_each_population, len(list2)):
            sample_list.append(list2[i])

        print("sample: ", sample_list)
        return sample_list

    def createSample2Part(self, list1, list2, sample_size):
        from_each_population = round(sample_size / 2)
        sample_list = []
        for i in range(from_each_population):
            sample_list.append(list1[i])
        for i in range(from_each_population):
            sample_list.append(list2[i])

        print("sample: ", sample_list)
        return sample_list

    def normalSampling(self, list1, size):
        sample_list = []
        for i in range(size):
            sample_list.append(list1[i])
        return sample_list

    def samplingForPun(self, list1, size):
        count = 0
        sample_list = []
    
        for i in range(len(list1)):
            if(count == size):
                break
            if(list1[i][2] == 2):
                continue
            sample_list.append(list1[i])
            count += 1
        print(len(sample_list))
        return sample_list
            
    ####################################################################################

    def match(self, mnSet1, mnSet2):
        print("Stub - Minutia Matching")                    #stub
        print("   Input - a set of minutiae (template)")    #stub
        print("   Input - a set of minutiae (input)")       #stub
        print("   Output - similarity score")               #stub

        #input_point_list = [[0,3],[0,0],[3,0]] #### mnSet1
        #given_point_list = [[6,6],[3,6],[3,3]] #### mnSet2
       
        
        input_point_list = mnSet1
        given_point_list = mnSet2
        
        if(len(input_point_list) > len(given_point_list)):
            print("swap list")
            input_point_list, given_point_list = self.listSwap(input_point_list,given_point_list)
        start_time = time.time()
        answer = 0
        maxs = 0
        for i in range(len(input_point_list)):
            print("###########",i,"############")
            for j in range(len(given_point_list)):
                translated_points = self.translateAllPoints(i,j,input_point_list,given_point_list)     
                for k in range(len(translated_points)):
                    for l in range(len(given_point_list)):   
                        similarity = self.allAboutRotations(k,l,translated_points,given_point_list, i)
                        if(similarity > maxs):
                            maxs = similarity
                        if(similarity > 0.75):
                            maxs = similarity
                            answer = 1
                        if(answer == 1):
                            break
                    if(answer == 1):
                        break
                if(answer == 1):
                    break
            if(answer == 1):
                break    
        if(answer == 1):
            print("-------------")
            print("    MATCH   ")
            print("-------------")
        else:
            print("-------------")
            print("  NOT MATCH")
            print("-------------")
        print("--TIME----------------------------")
        print("    %s seconds " % (time.time() - start_time))
        print("----------------------------------")
                                                            #stub
        return maxs                                   #stub
    
#-----------------------------
def samplingForPun( list1, size):
    count = 0
    sample_list = []

    for i in range(len(list1)):
        if(count == size):
            break
        if(list1[i][2] == 2):
            continue
        sample_list.append(list1[i])
        count += 1
    print(len(sample_list))
    return sample_list
if __name__ == "__main__":
    img = cv2.imread("img/1_1.bmp", cv2.IMREAD_GRAYSCALE)
    #ae = MnExtractor()
    #mnSet = ae.extract(img)

    ae2 = MnMatcher()
    list1_1 = [[1, 111, 1], [2, 97, 1], [2, 158, 1], [3, 166, 2], [4, 179, 2], [9, 96, 1], [15, 190, 2], [16, 163, 1], [16, 171, 2], [16, 192, 1], [17, 167, 1], [19, 80, 1], [22, 88, 2], [24, 192, 1], [26, 83, 1], [32, 64, 1], [32, 66, 1], [32, 179, 1], [32, 192, 1], [35, 196, 1], [36, 80, 1], [37, 95, 1], [38, 91, 1], [39, 215, 1], [40, 180, 1], [42, 76, 1], [42, 185, 1], [43, 71, 1], [45, 64, 1], [46, 64, 1], [46, 224, 1], [47, 214, 1], [48, 224, 1], [52, 71, 1], [53, 162, 1], [55, 164, 1], [55, 200, 2], [58, 65, 1], [58, 67, 1], [58, 220, 1], [61, 212, 2], [61, 223, 1], [62, 40, 1], [63, 47, 1], [63, 69, 1], [66, 214, 2], [67, 154, 1], [69, 224, 1], [70, 72, 1], [71, 207, 2], [72, 214, 2], [79, 223, 1], [80, 57, 1], [80, 59, 1], [82, 170, 1], [84, 67, 1], [84, 174, 1], [88, 212, 2], [88, 218, 2], [90, 182, 1], [90, 224, 1], [93, 159, 2], [93, 166, 2], [94, 60, 1], [96, 47, 1], [96, 50, 1], [98, 159, 2], [107, 58, 1], [112, 124, 1], [114, 160, 2], [115, 50, 1], [117, 119, 1], [117, 126, 1], [123, 51, 2], [131, 84, 2], [131, 193, 1], [132, 170, 1], [132, 222, 2], [134, 221, 2], [135, 53, 2], [135, 223, 2], [136, 176, 1], [139, 230, 2], [140, 184, 1], [140, 195, 1], [141, 127, 2], [142, 223, 1], [143, 48, 1], [143, 227, 1], [143, 230, 2], [144, 48, 1], [144, 223, 1], [144, 232, 1], [145, 57, 2], [150, 165, 1], [152, 70, 2], [153, 169, 1], [154, 58, 2], [154, 139, 2], [158, 68, 2], [158, 161, 1], [160, 31, 1], [160, 34, 1], [161, 51, 2], [161, 161, 2], [163, 168, 2], [164, 69, 2], [165, 163, 2], [166, 127, 1], [168, 44, 2], [172, 44, 2], [173, 85, 2], [174, 158, 1], [174, 170, 2], [175, 45, 2], [175, 169, 1], [176, 31, 1], [176, 34, 1], [177, 45, 2], [179, 228, 2], [180, 142, 2], [184, 232, 1], [185, 46, 2], [185, 144, 2], [186, 220, 1], [189, 154, 2], [189, 159, 1], [190, 136, 2], [190, 143, 2], [190, 163, 2], [190, 240, 1], [192, 31, 1], [192, 34, 1], [192, 171, 1], [192, 240, 1], [194, 47, 2], [194, 143, 2], [195, 154, 2], [195, 156, 1], [201, 165, 2], [201, 224, 1], [202, 186, 2], [204, 104, 1], [206, 47, 2], [206, 52, 2], [207, 41, 1], [207, 156, 2], [207, 175, 2], [208, 31, 1], [208, 32, 1], [208, 34, 1], [208, 35, 1], [209, 60, 2], [210, 57, 2], [211, 124, 2], [211, 204, 1], [215, 71, 2], [220, 58, 2], [220, 87, 2], [221, 146, 2], [222, 188, 1], [225, 116, 2], [228, 58, 2], [231, 224, 1], [235, 144, 1], [236, 58, 2], [237, 215, 1], [238, 224, 1], [239, 224, 1], [240, 139, 2], [245, 83, 2], [245, 121, 1], [246, 68, 2], [247, 190, 2], [250, 138, 2], [251, 189, 2], [253, 64, 1], [254, 64, 1]]
    list1_2 = [[4, 153, 1], [5, 123, 1], [5, 126, 2], [7, 176, 2], [7, 184, 1], [10, 192, 1], [11, 192, 1], [12, 91, 2], [13, 117, 2], [13, 128, 1], [13, 138, 1], [13, 176, 1], [14, 119, 1], [15, 176, 1], [16, 79, 1], [16, 82, 1], [16, 128, 1], [17, 167, 1], [18, 95, 1], [18, 191, 1], [20, 119, 1], [21, 137, 1], [23, 97, 1], [25, 129, 1], [25, 199, 1], [26, 96, 1], [26, 185, 1], [27, 140, 1], [28, 80, 1], [30, 135, 1], [31, 83, 2], [31, 87, 1], [31, 96, 2], [32, 64, 1], [32, 66, 1], [32, 93, 2], [32, 163, 1], [32, 166, 1], [32, 211, 1], [32, 212, 1], [33, 207, 1], [36, 80, 1], [37, 44, 2], [37, 64, 1], [38, 64, 1], [39, 40, 1], [39, 44, 2], [39, 48, 1], [39, 181, 1], [41, 206, 2], [42, 72, 1], [42, 74, 1], [42, 215, 1], [43, 184, 1], [45, 64, 1], [46, 64, 1], [49, 168, 1], [50, 72, 1], [52, 185, 1], [53, 160, 1], [56, 213, 2], [56, 218, 2], [57, 222, 2], [59, 64, 1], [59, 66, 1], [62, 40, 1], [63, 47, 1], [65, 204, 2], [66, 177, 1], [68, 181, 1], [69, 72, 1], [70, 66, 1], [71, 204, 2], [72, 218, 2], [73, 197, 2], [75, 191, 1], [77, 168, 2], [79, 223, 1], [80, 48, 1], [80, 50, 1], [80, 64, 1], [80, 66, 2], [81, 168, 2], [81, 170, 1], [83, 199, 2], [84, 68, 2], [85, 48, 1], [86, 48, 1], [88, 224, 1], [89, 56, 1], [90, 56, 1], [93, 48, 1], [94, 48, 1], [99, 167, 2], [103, 129, 1], [104, 225, 2], [106, 59, 2], [111, 56, 1], [112, 47, 1], [112, 51, 1], [115, 201, 1], [116, 91, 2], [116, 180, 1], [120, 136, 2], [120, 185, 1], [123, 193, 1], [124, 48, 1], [124, 204, 1], [128, 41, 1], [128, 43, 1], [128, 48, 1], [129, 48, 1], [130, 64, 1], [133, 148, 2], [134, 75, 1], [134, 78, 2], [137, 78, 2], [138, 41, 1], [138, 42, 1], [141, 168, 1], [144, 31, 1], [144, 35, 1], [146, 136, 1], [146, 178, 2], [157, 93, 2], [158, 42, 2], [158, 172, 2], [160, 31, 1], [160, 35, 1], [160, 178, 2], [166, 43, 2], [167, 49, 1], [170, 146, 2], [172, 172, 2], [173, 92, 2], [176, 31, 1], [176, 32, 1], [176, 34, 1], [176, 35, 1], [176, 43, 2], [176, 223, 1], [178, 93, 2], [182, 174, 2], [184, 136, 1], [185, 116, 1], [185, 194, 2], [187, 167, 2], [189, 48, 1], [191, 48, 1], [192, 181, 1], [194, 58, 2], [194, 70, 2], [195, 213, 1], [197, 63, 2], [200, 59, 2], [200, 84, 1], [202, 157, 2], [202, 226, 2], [203, 98, 2], [206, 196, 1], [207, 127, 2], [207, 227, 1], [207, 229, 2], [208, 32, 1], [208, 34, 1], [208, 48, 1], [208, 51, 1], [208, 232, 1], [209, 59, 2], [209, 221, 1], [210, 202, 1], [210, 203, 1], [215, 152, 2], [217, 62, 2], [217, 152, 1], [219, 39, 1], [221, 135, 1], [221, 144, 1], [221, 222, 1], [222, 48, 1], [222, 62, 2], [223, 48, 1], [223, 144, 1], [223, 153, 1], [227, 130, 1], [228, 135, 1], [230, 58, 2], [231, 35, 2], [231, 38, 2], [231, 79, 1], [233, 110, 2], [234, 94, 1], [235, 152, 2], [238, 56, 1], [238, 58, 2], [238, 144, 2], [239, 32, 1], [239, 35, 2], [239, 38, 2], [240, 40, 1], [240, 201, 2], [240, 222, 2], [246, 155, 2], [247, 73, 1], [247, 200, 2], [252, 107, 2], [253, 205, 2], [254, 173, 1]]
    list1_3 =  [[2, 164, 1], [3, 171, 1], [4, 147, 2], [6, 55, 2], [7, 48, 1], [10, 109, 1], [10, 180, 2], [11, 147, 2], [12, 104, 1], [12, 190, 2], [13, 48, 1], [14, 64, 1], [14, 95, 2], [15, 48, 1], [16, 64, 1], [16, 79, 1], [16, 82, 1], [18, 199, 1], [21, 95, 2], [22, 193, 1], [25, 117, 2], [27, 80, 1], [28, 80, 1], [29, 93, 2], [29, 198, 1], [31, 114, 2], [32, 89, 2], [34, 193, 1], [34, 197, 1], [34, 198, 1], [34, 202, 1], [38, 79, 2], [40, 164, 1], [41, 170, 1], [42, 200, 1], [42, 205, 2], [47, 79, 2], [47, 190, 1], [47, 195, 1], [47, 205, 2], [48, 63, 1], [48, 208, 1], [53, 218, 1], [57, 65, 1], [57, 66, 1], [62, 187, 2], [63, 183, 1], [64, 48, 1], [64, 50, 1], [64, 66, 1], [64, 223, 1], [65, 198, 2], [66, 187, 1], [71, 223, 1], [74, 55, 1], [74, 57, 1], [76, 100, 1], [77, 48, 1], [77, 162, 1], [78, 48, 1], [78, 214, 2], [79, 166, 1], [79, 223, 1], [80, 32, 1], [80, 34, 1], [80, 61, 2], [80, 199, 2], [80, 201, 2], [81, 96, 1], [84, 214, 2], [85, 63, 2], [86, 57, 1], [86, 199, 2], [90, 174, 2], [91, 39, 1], [91, 153, 1], [92, 223, 1], [94, 208, 2], [95, 75, 1], [96, 32, 1], [96, 47, 1], [96, 50, 1], [96, 174, 2], [97, 230, 1], [100, 59, 2], [103, 32, 1], [103, 39, 1], [103, 221, 2], [105, 170, 1], [107, 174, 1], [108, 186, 2], [109, 32, 1], [110, 212, 2], [110, 219, 2], [111, 32, 1], [111, 191, 2], [112, 48, 1], [113, 183, 1], [113, 186, 2], [114, 160, 2], [114, 191, 2], [114, 212, 2], [116, 50, 2], [116, 55, 1], [116, 165, 2], [117, 32, 1], [118, 32, 1], [119, 160, 2], [125, 32, 1], [125, 215, 1], [126, 32, 1], [126, 40, 1], [132, 49, 1], [135, 221, 1], [137, 159, 2], [138, 125, 1], [143, 48, 1], [150, 49, 1], [150, 83, 2], [152, 191, 1], [154, 223, 2], [155, 170, 1], [158, 127, 2], [158, 176, 1], [159, 230, 2], [160, 194, 1], [160, 232, 1], [161, 50, 1], [161, 64, 2], [161, 184, 1], [166, 215, 2], [169, 192, 1], [170, 70, 2], [170, 166, 1], [170, 192, 1], [170, 222, 1], [171, 139, 2], [173, 168, 1], [173, 183, 1], [176, 42, 1], [176, 43, 1], [176, 145, 2], [177, 51, 2], [177, 68, 2], [177, 154, 2], [180, 50, 1], [181, 203, 1], [183, 68, 2], [183, 163, 2], [184, 147, 2], [185, 123, 1], [185, 155, 2], [190, 40, 1], [192, 31, 1], [192, 32, 1], [192, 34, 1], [192, 35, 1], [192, 218, 2], [193, 84, 2], [193, 157, 1], [193, 222, 2], [194, 224, 1], [195, 169, 2], [198, 141, 2], [199, 48, 1], [199, 217, 2], [204, 143, 2], [206, 240, 1], [207, 143, 2], [207, 211, 1], [207, 232, 1], [207, 240, 1], [208, 136, 2], [209, 48, 1], [209, 166, 1], [209, 168, 2], [211, 145, 2], [211, 161, 2], [214, 96, 2], [219, 48, 1], [220, 164, 2], [220, 224, 1], [221, 99, 2], [222, 125, 1], [222, 213, 1], [223, 105, 1], [223, 108, 2], [223, 185, 2], [225, 60, 2], [226, 156, 2], [226, 171, 2], [227, 109, 2], [229, 170, 2], [230, 48, 1], [230, 54, 2], [231, 71, 2], [231, 202, 1], [231, 204, 1], [236, 170, 2], [237, 48, 1], [238, 48, 1], [238, 87, 2], [239, 190, 2], [239, 222, 2], [240, 53, 1], [240, 146, 2], [240, 165, 1], [240, 224, 1], [244, 57, 2], [244, 115, 2], [251, 207, 2], [253, 141, 1]]
    list1_4 = [[1, 109, 1], [1, 141, 1], [1, 142, 1], [1, 189, 1], [4, 112, 2], [4, 175, 2], [7, 56, 1], [10, 165, 1], [11, 93, 2], [11, 109, 2], [16, 169, 2], [16, 192, 1], [17, 81, 1], [17, 84, 1], [17, 93, 2], [17, 161, 1], [18, 166, 1], [23, 115, 1], [25, 81, 1], [27, 112, 1], [29, 129, 1], [31, 190, 2], [31, 192, 1], [32, 64, 1], [32, 66, 1], [32, 176, 1], [34, 79, 1], [35, 128, 1], [35, 207, 1], [36, 112, 1], [41, 71, 1], [41, 74, 1], [41, 117, 1], [41, 133, 1], [41, 178, 1], [41, 215, 1], [42, 184, 1], [43, 196, 2], [44, 77, 1], [44, 130, 1], [45, 64, 1], [45, 202, 2], [46, 64, 1], [46, 224, 1], [48, 210, 2], [48, 212, 2], [48, 215, 1], [48, 224, 1], [52, 210, 2], [55, 198, 2], [56, 64, 1], [57, 64, 1], [62, 222, 1], [63, 65, 1], [67, 171, 2], [68, 151, 1], [69, 69, 1], [70, 224, 1], [72, 205, 2], [73, 171, 2], [73, 174, 1], [75, 178, 1], [79, 74, 2], [80, 32, 1], [80, 34, 1], [81, 58, 1], [81, 168, 1], [81, 218, 2], [83, 56, 1], [83, 58, 2], [83, 173, 1], [85, 184, 2], [87, 59, 2], [87, 189, 2], [88, 209, 2], [88, 216, 2], [89, 181, 1], [89, 184, 2], [91, 209, 2], [92, 163, 2], [93, 56, 1], [93, 58, 2], [94, 159, 2], [94, 192, 1], [95, 32, 1], [95, 39, 1], [96, 47, 1], [96, 52, 1], [96, 156, 2], [97, 59, 2], [101, 58, 1], [111, 48, 1], [112, 48, 1], [112, 58, 1], [113, 157, 2], [119, 117, 1], [121, 40, 1], [121, 47, 1], [126, 44, 2], [127, 80, 2], [128, 31, 1], [128, 32, 1], [128, 44, 2], [128, 171, 1], [130, 190, 1], [132, 47, 2], [133, 125, 2], [133, 219, 2], [134, 41, 1], [134, 173, 1], [135, 54, 2], [138, 49, 2], [138, 181, 1], [138, 191, 1], [140, 49, 1], [141, 224, 1], [142, 240, 1], [143, 224, 1], [144, 240, 1], [146, 137, 2], [147, 156, 2], [148, 67, 2], [152, 152, 2], [153, 157, 2], [153, 159, 1], [154, 224, 1], [155, 51, 2], [155, 214, 1], [155, 224, 1], [159, 124, 1], [159, 153, 2], [160, 50, 1], [160, 166, 2], [168, 81, 2], [169, 160, 2], [170, 223, 1], [172, 223, 1], [174, 166, 2], [177, 49, 2], [182, 134, 2], [183, 40, 1], [186, 159, 2], [188, 49, 1], [188, 96, 2], [192, 31, 1], [192, 32, 1], [192, 42, 1], [192, 43, 1], [194, 97, 2], [196, 161, 2], [197, 50, 1], [197, 102, 1], [200, 181, 2], [201, 153, 2], [204, 58, 2], [204, 121, 2], [204, 222, 2], [205, 193, 1], [207, 223, 1], [208, 49, 1], [210, 70, 1], [213, 167, 2], [214, 85, 2], [216, 143, 2], [216, 224, 1], [219, 113, 2], [220, 182, 1], [223, 48, 1], [223, 50, 2], [223, 57, 2], [225, 191, 2], [230, 57, 2], [230, 140, 1], [230, 188, 2], [230, 211, 2], [231, 224, 1], [233, 186, 1], [233, 188, 2], [235, 133, 2], [238, 224, 1], [239, 58, 2], [239, 64, 2], [240, 224, 1], [242, 211, 1], [244, 96, 2], [245, 115, 2], [245, 133, 2], [250, 65, 2], [250, 70, 2], [253, 212, 2], [254, 215, 2]]
    list2_1 = [[2, 134, 1], [3, 110, 1], [3, 142, 1], [4, 164, 1], [6, 104, 1], [7, 98, 1], [7, 124, 1], [7, 168, 1], [7, 170, 2], [8, 118, 1], [10, 176, 2], [10, 192, 1], [13, 96, 1], [14, 170, 2], [16, 79, 1], [16, 83, 1], [16, 90, 2], [16, 160, 2], [17, 88, 1], [18, 187, 2], [20, 198, 1], [21, 144, 1], [23, 149, 1], [23, 176, 2], [24, 198, 2], [25, 155, 2], [25, 156, 2], [26, 135, 1], [26, 188, 1], [27, 207, 1], [28, 80, 1], [28, 139, 1], [29, 167, 2], [30, 95, 2], [31, 155, 2], [31, 165, 1], [31, 167, 2], [35, 184, 2], [36, 75, 2], [38, 117, 2], [39, 214, 1], [41, 75, 2], [42, 224, 1], [43, 212, 2], [43, 224, 1], [44, 75, 2], [48, 63, 1], [48, 174, 2], [49, 41, 1], [49, 46, 1], [49, 222, 1], [49, 223, 1], [50, 171, 2], [51, 71, 2], [51, 181, 2], [52, 208, 2], [53, 66, 2], [53, 171, 2], [54, 206, 2], [55, 72, 2], [55, 132, 1], [56, 168, 2], [56, 180, 2], [57, 83, 2], [59, 163, 1], [59, 183, 1], [61, 67, 2], [61, 222, 1], [62, 41, 1], [64, 57, 1], [64, 59, 1], [64, 165, 1], [66, 93, 2], [68, 93, 2], [68, 186, 1], [68, 218, 1], [71, 110, 2], [72, 126, 1], [73, 65, 2], [76, 90, 2], [77, 163, 1], [80, 47, 1], [80, 51, 1], [93, 58, 2], [93, 106, 1], [95, 141, 2], [95, 224, 2], [95, 225, 2], [96, 47, 1], [96, 50, 1], [97, 58, 1], [97, 135, 2], [101, 220, 2], [103, 196, 2], [105, 47, 1], [106, 53, 1], [106, 98, 2], [106, 194, 2], [107, 140, 2], [109, 51, 2], [109, 59, 2], [109, 223, 2], [110, 98, 2], [111, 68, 2], [111, 138, 2], [112, 43, 1], [112, 44, 1], [116, 50, 1], [117, 104, 2], [122, 191, 1], [123, 133, 2], [124, 45, 1], [127, 32, 1], [128, 41, 2], [129, 155, 2], [133, 89, 2], [134, 90, 2], [137, 82, 2], [138, 42, 2], [138, 84, 2], [139, 217, 2], [142, 214, 2], [143, 176, 2], [144, 31, 1], [144, 34, 1], [144, 42, 2], [144, 85, 2], [144, 111, 1], [146, 127, 1], [146, 214, 1], [147, 44, 2], [157, 168, 2], [158, 43, 2], [158, 47, 2], [158, 149, 2], [158, 157, 2], [158, 160, 2], [159, 161, 2], [159, 165, 2], [160, 31, 1], [160, 34, 1], [160, 48, 2], [161, 165, 1], [162, 52, 1], [162, 148, 2], [162, 151, 2], [162, 220, 1], [167, 43, 2], [168, 163, 2], [169, 170, 2], [170, 167, 2], [175, 42, 1], [176, 31, 1], [176, 34, 1], [179, 47, 2], [186, 59, 1], [186, 215, 1], [186, 222, 2], [192, 31, 1], [192, 34, 1], [192, 219, 1], [195, 66, 1], [198, 43, 2], [199, 219, 1], [203, 158, 1], [204, 64, 1], [204, 168, 2], [204, 171, 1], [204, 215, 1], [207, 54, 1], [208, 31, 1], [208, 32, 1], [212, 168, 2], [213, 214, 1], [215, 64, 2], [216, 58, 2], [219, 48, 1], [220, 48, 1], [222, 56, 1], [222, 66, 2], [222, 77, 2], [224, 32, 1], [224, 34, 1], [224, 161, 2], [224, 168, 2], [227, 112, 2], [227, 144, 2], [231, 48, 2], [231, 52, 2], [231, 56, 2], [231, 113, 2], [236, 152, 1], [237, 48, 1], [239, 32, 1], [239, 67, 2], [239, 73, 1], [239, 105, 1], [239, 169, 1], [240, 49, 1], [241, 126, 2], [244, 70, 2], [244, 72, 1], [244, 173, 1], [245, 48, 1], [246, 48, 1], [246, 206, 2], [247, 55, 1], [247, 63, 2], [247, 70, 2], [247, 80, 2], [247, 207, 2], [253, 193, 2]]
    list2_2 = [[2, 141, 1], [3, 175, 1], [5, 129, 2], [5, 132, 2], [8, 129, 2], [8, 132, 2], [8, 138, 1], [8, 142, 1], [9, 91, 2], [11, 92, 2], [12, 122, 2], [13, 181, 1], [14, 117, 2], [14, 165, 2], [15, 166, 2], [16, 64, 1], [16, 79, 1], [16, 123, 2], [16, 164, 2], [17, 92, 2], [18, 169, 1], [20, 112, 1], [21, 83, 2], [21, 176, 1], [21, 182, 2], [21, 186, 1], [22, 122, 1], [23, 81, 1], [24, 116, 1], [24, 179, 1], [24, 182, 2], [25, 109, 1], [25, 136, 1], [26, 130, 1], [31, 182, 2], [35, 200, 2], [36, 189, 1], [38, 156, 1], [39, 212, 2], [39, 215, 1], [40, 81, 1], [40, 160, 1], [40, 205, 2], [42, 171, 2], [42, 212, 2], [42, 224, 1], [43, 147, 1], [43, 224, 1], [44, 201, 1], [44, 205, 2], [46, 76, 2], [46, 153, 1], [47, 72, 1], [47, 108, 2], [47, 180, 2], [48, 78, 2], [48, 167, 2], [49, 64, 1], [49, 170, 2], [49, 180, 2], [50, 41, 1], [50, 70, 1], [53, 177, 2], [54, 46, 1], [54, 198, 2], [55, 65, 1], [55, 132, 2], [55, 186, 2], [59, 71, 2], [59, 83, 1], [59, 185, 2], [60, 215, 2], [61, 221, 2], [62, 65, 1], [64, 71, 2], [64, 74, 2], [65, 227, 1], [68, 189, 1], [69, 66, 2], [69, 185, 2], [70, 195, 2], [70, 222, 2], [71, 196, 2], [72, 195, 2], [72, 219, 2], [73, 146, 1], [74, 96, 2], [75, 195, 2], [76, 185, 2], [76, 186, 2], [78, 66, 2], [78, 197, 1], [80, 58, 1], [80, 230, 1], [83, 56, 1], [83, 58, 2], [83, 106, 2], [85, 107, 2], [86, 59, 2], [86, 199, 1], [89, 124, 2], [90, 138, 1], [90, 158, 1], [93, 230, 1], [94, 103, 2], [95, 177, 1], [96, 47, 1], [96, 50, 1], [96, 163, 1], [97, 158, 1], [100, 57, 2], [102, 160, 1], [103, 57, 1], [104, 157, 1], [112, 118, 1], [115, 151, 1], [116, 149, 2], [117, 61, 2], [122, 210, 2], [123, 230, 2], [124, 49, 1], [125, 208, 2], [127, 75, 2], [129, 44, 1], [130, 79, 1], [138, 112, 1], [142, 43, 2], [142, 148, 2], [144, 31, 1], [144, 35, 1], [144, 207, 1], [146, 40, 1], [148, 170, 2], [150, 207, 2], [153, 105, 2], [154, 107, 2], [157, 43, 1], [157, 196, 2], [158, 102, 2], [158, 191, 2], [158, 192, 2], [158, 225, 2], [159, 134, 2], [160, 31, 1], [160, 35, 1], [160, 222, 2], [163, 189, 2], [163, 192, 2], [165, 32, 1], [166, 32, 1], [166, 40, 1], [167, 47, 1], [169, 126, 1], [170, 181, 1], [173, 32, 1], [174, 32, 1], [174, 72, 1], [174, 201, 2], [174, 203, 2], [175, 58, 2], [175, 62, 2], [176, 47, 1], [176, 50, 1], [177, 176, 2], [178, 173, 2], [178, 181, 2], [178, 184, 2], [179, 178, 2], [180, 67, 1], [181, 32, 1], [182, 32, 1], [182, 58, 2], [183, 164, 2], [188, 178, 2], [188, 181, 2], [189, 32, 1], [189, 185, 2], [190, 32, 1], [190, 47, 1], [190, 183, 2], [191, 40, 1], [191, 50, 1], [195, 63, 2], [199, 230, 2], [200, 232, 1], [206, 240, 1], [208, 47, 1], [208, 50, 1], [208, 74, 2], [208, 224, 1], [208, 240, 1], [209, 60, 2], [223, 173, 1], [224, 47, 1], [224, 50, 1], [224, 177, 2], [225, 183, 2], [225, 185, 1], [227, 172, 1], [230, 63, 2], [232, 182, 2], [235, 61, 2], [239, 32, 1], [239, 34, 2], [239, 38, 2], [239, 61, 2], [239, 83, 2], [239, 221, 2], [240, 40, 1], [240, 47, 1], [240, 48, 1], [240, 91, 2], [240, 224, 1], [242, 84, 2], [245, 182, 2], [247, 58, 2], [247, 158, 2], [248, 56, 1], [249, 178, 2]]
    list2_3 = [[4, 186, 2], [6, 149, 1], [7, 56, 1], [7, 58, 2], [7, 184, 1], [7, 186, 2], [7, 188, 2], [7, 198, 1], [11, 197, 1], [14, 123, 2], [15, 197, 1], [16, 64, 1], [16, 66, 1], [17, 93, 2], [17, 124, 2], [17, 197, 2], [20, 165, 2], [20, 199, 1], [21, 64, 1], [21, 169, 2], [22, 64, 1], [22, 178, 1], [24, 122, 1], [24, 171, 1], [26, 110, 1], [26, 115, 1], [26, 202, 1], [27, 175, 1], [27, 176, 1], [27, 208, 1], [28, 136, 1], [29, 64, 1], [29, 72, 1], [29, 129, 1], [29, 179, 1], [29, 181, 2], [30, 64, 1], [35, 173, 2], [35, 183, 2], [37, 76, 2], [39, 77, 2], [39, 169, 2], [39, 172, 2], [39, 213, 1], [41, 78, 2], [41, 199, 2], [42, 188, 1], [43, 168, 2], [44, 213, 2], [45, 77, 2], [46, 72, 1], [46, 168, 2], [47, 45, 1], [47, 147, 1], [47, 204, 2], [48, 63, 1], [48, 78, 2], [49, 70, 1], [49, 106, 2], [49, 165, 2], [49, 199, 1], [50, 151, 1], [50, 203, 2], [51, 46, 1], [51, 215, 2], [52, 178, 2], [53, 64, 1], [53, 165, 2], [53, 215, 2], [55, 176, 2], [55, 178, 2], [56, 46, 1], [56, 66, 2], [56, 175, 2], [58, 175, 2], [59, 65, 1], [59, 82, 1], [59, 128, 2], [59, 196, 2], [59, 215, 2], [62, 41, 1], [62, 45, 1], [62, 46, 1], [62, 48, 1], [63, 214, 2], [64, 48, 1], [64, 188, 2], [66, 58, 1], [66, 222, 2], [69, 145, 2], [70, 187, 2], [71, 185, 2], [73, 59, 2], [73, 69, 1], [73, 182, 2], [74, 142, 2], [74, 145, 2], [76, 93, 2], [76, 182, 2], [76, 191, 2], [76, 218, 2], [78, 217, 2], [79, 173, 2], [79, 178, 2], [79, 191, 2], [80, 47, 1], [80, 50, 1], [80, 231, 1], [81, 183, 2], [82, 172, 2], [83, 59, 2], [83, 191, 2], [84, 183, 2], [84, 189, 1], [87, 8, 1], [91, 59, 2], [94, 16, 1], [94, 119, 2], [94, 133, 1], [94, 154, 1], [95, 16, 1], [95, 205, 2], [96, 47, 1], [96, 51, 1], [96, 54, 1], [98, 99, 2], [98, 204, 2], [100, 173, 1], [101, 159, 1], [105, 95, 2], [106, 47, 1], [107, 230, 1], [110, 52, 2], [111, 95, 2], [114, 58, 2], [117, 115, 1], [119, 147, 1], [120, 51, 2], [121, 144, 2], [126, 205, 2], [127, 54, 2], [127, 71, 2], [128, 203, 2], [132, 43, 1], [132, 79, 2], [132, 157, 2], [132, 208, 2], [132, 230, 1], [134, 155, 2], [135, 74, 2], [135, 206, 2], [136, 110, 2], [137, 40, 1], [137, 230, 1], [138, 76, 2], [140, 44, 2], [143, 186, 2], [144, 31, 1], [144, 35, 1], [144, 184, 2], [146, 202, 1], [147, 230, 2], [148, 144, 2], [151, 165, 2], [154, 43, 2], [157, 101, 2], [159, 102, 2], [160, 31, 1], [160, 34, 1], [162, 93, 2], [165, 185, 2], [166, 98, 2], [170, 42, 2], [170, 229, 2], [171, 95, 2], [171, 122, 1], [174, 56, 2], [174, 63, 2], [175, 138, 1], [176, 31, 1], [176, 34, 1], [176, 195, 2], [176, 198, 2], [176, 223, 1], [180, 51, 1], [180, 171, 2], [180, 179, 2], [181, 171, 2], [181, 176, 2], [181, 196, 2], [181, 199, 2], [182, 167, 2], [183, 159, 2], [185, 48, 1], [186, 159, 2], [186, 161, 2], [188, 46, 2], [188, 171, 2], [189, 168, 2], [192, 31, 1], [192, 35, 1], [192, 172, 2], [192, 175, 2], [192, 179, 2], [193, 177, 2], [194, 55, 2], [199, 225, 1], [201, 46, 2], [201, 63, 2], [206, 41, 1], [206, 223, 1], [206, 240, 1], [207, 67, 2], [208, 46, 2], [208, 223, 1], [208, 240, 1], [209, 46, 2], [209, 64, 2], [214, 46, 2], [215, 32, 1], [218, 166, 2], [219, 165, 2], [220, 167, 2], [221, 32, 1], [221, 48, 1], [222, 222, 2], [223, 32, 1], [223, 48, 1], [224, 222, 1], [225, 60, 2], [225, 167, 2], [226, 171, 2], [227, 177, 2], [227, 179, 1], [231, 63, 2], [232, 194, 1], [234, 177, 2], [234, 194, 2], [236, 213, 1], [239, 63, 2], [239, 83, 2], [239, 213, 2], [240, 47, 1], [240, 48, 1], [240, 59, 2], [240, 224, 1], [247, 65, 2], [249, 176, 2], [250, 152, 2], [250, 157, 2], [252, 167, 2], [253, 159, 2]]
    list2_4 = [[4, 116, 2], [4, 123, 2], [5, 61, 2], [5, 146, 2], [6, 123, 2], [6, 131, 1], [7, 112, 2], [8, 106, 1], [8, 177, 1], [10, 145, 1], [10, 159, 2], [11, 101, 1], [11, 115, 2], [12, 150, 1], [12, 174, 1], [13, 80, 1], [14, 116, 2], [15, 56, 1], [15, 80, 1], [16, 64, 1], [16, 168, 1], [16, 195, 1], [16, 196, 1], [17, 149, 1], [18, 154, 1], [18, 174, 1], [18, 176, 2], [20, 115, 1], [20, 166, 2], [20, 184, 2], [20, 191, 1], [21, 104, 1], [21, 179, 2], [22, 131, 1], [24, 104, 1], [24, 108, 1], [24, 123, 1], [24, 179, 2], [25, 181, 1], [28, 80, 1], [29, 186, 1], [29, 202, 2], [31, 196, 2], [32, 207, 2], [33, 75, 1], [33, 152, 1], [34, 156, 1], [34, 207, 1], [35, 166, 2], [36, 75, 1], [36, 173, 1], [38, 164, 2], [39, 143, 1], [40, 148, 1], [41, 164, 2], [41, 176, 1], [41, 179, 2], [42, 76, 1], [42, 78, 2], [42, 215, 1], [42, 224, 1], [43, 215, 1], [43, 224, 1], [44, 194, 1], [47, 102, 2], [48, 63, 1], [48, 66, 1], [50, 82, 1], [50, 128, 2], [50, 193, 1], [52, 214, 2], [52, 223, 1], [53, 72, 1], [54, 85, 1], [55, 197, 1], [56, 137, 1], [56, 187, 2], [57, 66, 1], [57, 74, 2], [57, 76, 1], [57, 145, 1], [59, 184, 2], [62, 184, 2], [62, 223, 1], [63, 81, 1], [64, 156, 1], [65, 181, 2], [65, 184, 2], [66, 142, 1], [66, 186, 2], [66, 195, 1], [66, 212, 2], [66, 227, 1], [67, 79, 1], [67, 184, 2], [67, 185, 2], [67, 188, 2], [68, 100, 1], [68, 159, 1], [69, 187, 2], [71, 144, 1], [75, 66, 2], [75, 198, 1], [77, 144, 1], [77, 161, 1], [78, 64, 1], [78, 66, 2], [80, 57, 1], [80, 59, 1], [80, 103, 2], [80, 153, 1], [81, 67, 2], [81, 157, 1], [82, 103, 2], [82, 116, 2], [82, 121, 2], [82, 138, 1], [85, 66, 1], [85, 116, 2], [85, 160, 1], [85, 177, 1], [89, 55, 1], [90, 60, 1], [90, 100, 2], [93, 58, 2], [93, 156, 1], [96, 47, 1], [96, 50, 1], [96, 58, 1], [101, 162, 1], [104, 151, 1], [105, 50, 1], [105, 117, 1], [106, 149, 2], [107, 229, 2], [108, 173, 1], [110, 48, 1], [111, 212, 2], [114, 211, 2], [117, 59, 2], [118, 215, 2], [119, 50, 2], [119, 230, 1], [121, 52, 2], [122, 214, 2], [125, 71, 2], [127, 80, 2], [128, 118, 2], [128, 207, 1], [129, 41, 1], [130, 76, 2], [130, 148, 2], [132, 45, 2], [132, 78, 2], [135, 171, 2], [138, 229, 2], [140, 228, 2], [142, 42, 1], [143, 132, 1], [144, 31, 1], [144, 34, 1], [144, 103, 2], [144, 240, 1], [146, 105, 2], [147, 132, 2], [149, 228, 2], [152, 101, 2], [152, 225, 2], [154, 127, 1], [155, 42, 2], [155, 230, 1], [159, 44, 2], [160, 31, 1], [160, 35, 1], [161, 204, 2], [162, 143, 1], [163, 186, 2], [164, 178, 2], [165, 166, 2], [165, 175, 2], [165, 180, 2], [165, 184, 2], [166, 40, 1], [169, 166, 2], [169, 168, 2], [173, 58, 2], [175, 65, 1], [175, 229, 2], [176, 31, 1], [176, 34, 1], [176, 181, 2], [176, 183, 2], [176, 188, 2], [176, 226, 2], [177, 185, 2], [191, 42, 2], [192, 31, 1], [192, 34, 1], [193, 60, 2], [198, 73, 2], [199, 53, 1], [199, 224, 1], [199, 232, 1], [200, 74, 2], [201, 58, 2], [201, 74, 2], [202, 213, 1], [203, 173, 2], [204, 213, 2], [206, 240, 1], [207, 224, 1], [207, 240, 1], [208, 31, 1], [208, 36, 1], [208, 48, 1], [208, 51, 1], [208, 221, 2], [209, 59, 2], [212, 185, 2], [212, 187, 1], [218, 39, 1], [218, 231, 1], [219, 184, 2], [220, 59, 2], [221, 67, 1], [222, 240, 1], [223, 32, 1], [224, 47, 1], [224, 50, 1], [224, 240, 1], [226, 65, 1], [231, 60, 2], [232, 91, 2], [232, 184, 2], [233, 82, 2], [235, 159, 2], [235, 174, 2], [236, 128, 2], [237, 181, 1], [239, 60, 2], [239, 82, 2], [239, 86, 2], [239, 221, 2], [240, 47, 1], [240, 48, 1], [240, 129, 2], [241, 174, 2], [242, 88, 2], [242, 144, 1], [242, 220, 2], [243, 222, 2], [244, 168, 1], [248, 120, 1], [252, 183, 2]]
    list3_1 = [[2, 173, 1], [4, 163, 1], [4, 178, 2], [6, 166, 1], [6, 168, 1], [7, 127, 2], [7, 142, 2], [9, 102, 2], [10, 127, 2], [12, 159, 2], [13, 130, 2], [13, 165, 1], [15, 98, 2], [16, 96, 1], [16, 138, 2], [16, 191, 2], [18, 130, 2], [18, 175, 2], [18, 198, 1], [19, 143, 1], [20, 179, 1], [21, 151, 1], [23, 96, 1], [23, 170, 2], [23, 173, 1], [25, 89, 1], [25, 94, 1], [25, 186, 2], [26, 160, 1], [26, 192, 1], [27, 177, 1], [28, 150, 1], [28, 160, 1], [30, 80, 1], [31, 163, 1], [32, 214, 1], [33, 144, 1], [33, 186, 1], [33, 214, 1], [35, 150, 1], [36, 163, 2], [37, 204, 2], [38, 207, 2], [39, 172, 2], [40, 141, 2], [40, 161, 2], [41, 81, 1], [41, 203, 2], [42, 149, 2], [42, 175, 2], [43, 137, 2], [44, 207, 2], [48, 133, 1], [48, 219, 1], [48, 220, 1], [49, 170, 2], [50, 135, 1], [51, 74, 1], [53, 152, 1], [56, 104, 1], [56, 144, 1], [57, 100, 1], [57, 138, 1], [58, 65, 1], [59, 164, 2], [59, 196, 1], [60, 111, 2], [60, 150, 1], [60, 160, 1], [60, 170, 2], [63, 47, 1], [64, 64, 1], [64, 143, 2], [65, 187, 1], [66, 108, 1], [66, 164, 2], [66, 198, 1], [67, 221, 2], [69, 162, 2], [69, 221, 1], [70, 100, 1], [71, 64, 1], [71, 191, 1], [73, 107, 1], [74, 104, 1], [76, 175, 2], [77, 110, 1], [77, 207, 1], [78, 64, 1], [78, 226, 2], [80, 230, 2], [81, 119, 1], [82, 105, 1], [83, 110, 1], [83, 124, 1], [88, 120, 1], [88, 140, 1], [89, 133, 1], [90, 170, 1], [91, 144, 1], [92, 75, 1], [94, 77, 2], [95, 56, 1], [95, 58, 2], [95, 172, 1], [95, 226, 1], [96, 47, 1], [96, 52, 1], [96, 146, 1], [97, 166, 2], [97, 226, 2], [98, 100, 2], [100, 149, 1], [103, 24, 1], [104, 32, 1], [106, 50, 1], [106, 119, 1], [107, 123, 1], [107, 171, 1], [108, 55, 2], [109, 16, 1], [110, 32, 1], [111, 16, 1], [111, 53, 1], [112, 32, 1], [112, 141, 2], [113, 144, 2], [115, 148, 2], [116, 135, 2], [122, 115, 2], [123, 51, 1], [124, 67, 1], [127, 115, 2], [128, 32, 1], [128, 34, 1], [129, 99, 1], [131, 95, 1], [132, 101, 2], [133, 32, 1], [133, 95, 2], [134, 32, 1], [135, 40, 1], [135, 43, 1], [135, 45, 2], [135, 49, 2], [135, 149, 1], [136, 95, 2], [139, 51, 2], [139, 230, 2], [141, 32, 1], [141, 182, 2], [142, 32, 1], [142, 75, 2], [144, 50, 1], [144, 76, 2], [144, 80, 2], [144, 95, 2], [144, 185, 2], [144, 189, 2], [147, 81, 2], [147, 92, 2], [148, 95, 2], [149, 93, 2], [151, 99, 2], [151, 150, 2], [154, 42, 1], [156, 150, 2], [160, 31, 1], [160, 32, 1], [160, 34, 1], [160, 35, 1], [160, 47, 2], [161, 60, 2], [163, 48, 2], [164, 61, 2], [171, 194, 2], [173, 49, 2], [174, 158, 2], [175, 49, 1], [175, 133, 2], [177, 226, 2], [182, 112, 2], [183, 110, 2], [190, 16, 1], [191, 8, 1], [191, 16, 1], [192, 32, 1], [192, 34, 1], [194, 44, 1], [197, 42, 2], [199, 116, 2], [199, 232, 1], [200, 197, 2], [201, 200, 2], [203, 198, 2], [205, 63, 2], [205, 116, 2], [205, 129, 2], [205, 177, 2], [206, 43, 2], [206, 67, 2], [206, 101, 2], [206, 240, 1], [207, 175, 2], [207, 223, 1], [207, 240, 1], [208, 31, 1], [208, 32, 1], [208, 34, 1], [208, 35, 1], [211, 115, 2], [212, 67, 2], [212, 70, 2], [212, 166, 2], [214, 119, 1], [215, 179, 2], [216, 70, 2], [218, 64, 2], [218, 117, 2], [218, 163, 2], [220, 52, 2], [222, 46, 2], [223, 64, 2], [224, 45, 2], [225, 52, 2], [225, 92, 2], [226, 45, 2], [229, 67, 1], [229, 128, 1], [230, 170, 1], [231, 220, 2], [233, 118, 2], [234, 170, 2], [237, 82, 2], [238, 224, 1], [240, 134, 2], [240, 224, 1], [242, 45, 2], [242, 52, 1], [242, 111, 2], [242, 134, 1], [244, 141, 2], [247, 41, 1], [247, 45, 2], [253, 128, 1], [253, 136, 1], [253, 206, 1], [254, 72, 2]]
    list3_2 = [[3, 159, 1], [7, 164, 1], [7, 249, 1], [11, 175, 1], [13, 97, 1], [14, 152, 2], [15, 139, 2], [16, 91, 1], [16, 92, 1], [16, 144, 1], [18, 199, 1], [19, 97, 1], [20, 133, 1], [20, 172, 2], [20, 177, 2], [22, 138, 1], [22, 149, 2], [22, 194, 2], [27, 80, 1], [28, 144, 2], [29, 207, 1], [30, 102, 1], [30, 174, 2], [31, 85, 2], [32, 64, 1], [32, 66, 1], [32, 99, 1], [32, 110, 2], [33, 80, 1], [33, 144, 2], [36, 199, 2], [37, 64, 1], [37, 192, 1], [38, 64, 1], [38, 207, 1], [42, 206, 1], [42, 208, 1], [43, 195, 1], [43, 208, 1], [45, 64, 1], [45, 72, 1], [45, 109, 1], [45, 112, 2], [46, 64, 1], [46, 179, 2], [48, 104, 1], [52, 125, 1], [53, 72, 1], [54, 108, 1], [54, 112, 1], [54, 115, 1], [54, 207, 1], [57, 127, 1], [57, 135, 1], [58, 123, 1], [59, 64, 1], [59, 174, 1], [61, 69, 2], [61, 130, 2], [63, 47, 1], [64, 59, 1], [64, 60, 1], [64, 150, 1], [64, 223, 1], [65, 178, 1], [65, 218, 2], [66, 66, 1], [67, 153, 1], [68, 169, 1], [69, 126, 2], [70, 75, 1], [71, 105, 2], [72, 78, 2], [74, 67, 1], [76, 123, 1], [76, 177, 1], [76, 223, 1], [79, 146, 2], [80, 149, 2], [80, 152, 2], [81, 59, 1], [81, 226, 1], [82, 140, 2], [87, 223, 1], [88, 126, 1], [89, 229, 2], [90, 59, 2], [90, 63, 2], [93, 63, 2], [96, 47, 1], [96, 50, 1], [96, 121, 2], [96, 168, 1], [97, 80, 2], [98, 59, 2], [100, 104, 1], [101, 156, 1], [102, 101, 1], [103, 107, 2], [104, 101, 2], [107, 102, 2], [109, 187, 2], [110, 57, 2], [112, 47, 1], [112, 50, 1], [112, 109, 2], [112, 194, 2], [113, 190, 2], [115, 103, 2], [117, 58, 2], [117, 157, 2], [118, 109, 2], [121, 156, 2], [123, 48, 1], [127, 51, 2], [129, 51, 1], [130, 46, 1], [136, 48, 1], [136, 52, 1], [139, 50, 1], [139, 164, 2], [141, 32, 1], [141, 135, 2], [142, 55, 1], [143, 32, 1], [144, 141, 2], [144, 143, 2], [144, 200, 2], [147, 141, 2], [147, 143, 2], [148, 230, 2], [149, 32, 1], [149, 134, 2], [150, 32, 1], [150, 49, 1], [152, 141, 2], [155, 47, 1], [155, 141, 2], [157, 32, 1], [158, 32, 1], [158, 47, 2], [159, 40, 1], [161, 139, 2], [164, 49, 2], [169, 52, 2], [169, 124, 2], [173, 125, 2], [173, 137, 2], [176, 48, 1], [176, 181, 2], [176, 230, 2], [177, 108, 2], [177, 180, 2], [183, 68, 2], [184, 126, 1], [186, 48, 2], [186, 184, 2], [191, 94, 2], [192, 32, 1], [192, 35, 1], [194, 132, 2], [200, 178, 2], [202, 45, 2], [202, 126, 2], [204, 173, 2], [206, 43, 2], [207, 230, 2], [208, 31, 1], [208, 32, 1], [208, 74, 2], [208, 116, 1], [208, 232, 1], [210, 134, 1], [212, 76, 2], [212, 87, 2], [214, 73, 1], [218, 51, 2], [218, 69, 2], [219, 222, 2], [223, 41, 1], [223, 50, 1], [223, 52, 2], [223, 61, 1], [224, 57, 2], [224, 71, 2], [226, 146, 2], [230, 212, 2], [231, 221, 2], [231, 224, 1], [232, 78, 2], [233, 162, 2], [234, 58, 2], [235, 62, 2], [237, 207, 1], [239, 207, 1], [244, 183, 2], [246, 72, 2], [246, 106, 2], [246, 183, 2], [251, 59, 2], [251, 62, 2], [251, 143, 2], [254, 141, 1], [254, 178, 2]]
    list3_3 = [[2, 143, 1], [4, 169, 1], [4, 171, 2], [8, 143, 2], [10, 133, 1], [10, 154, 1], [10, 165, 1], [12, 138, 1], [13, 96, 1], [16, 80, 1], [16, 82, 1], [16, 88, 1], [16, 89, 1], [16, 163, 2], [17, 197, 1], [17, 199, 1], [18, 142, 1], [18, 158, 2], [18, 180, 2], [19, 176, 2], [20, 145, 1], [21, 80, 1], [22, 80, 1], [22, 87, 1], [22, 163, 2], [23, 139, 1], [24, 195, 2], [25, 189, 1], [26, 206, 1], [27, 155, 1], [27, 180, 1], [27, 195, 2], [29, 88, 1], [30, 134, 2], [31, 127, 2], [32, 64, 1], [32, 66, 1], [32, 141, 2], [32, 143, 2], [32, 198, 2], [34, 200, 2], [34, 201, 2], [34, 203, 2], [34, 206, 2], [36, 197, 2], [36, 199, 2], [36, 200, 2], [37, 64, 1], [37, 80, 1], [38, 64, 1], [38, 125, 1], [39, 200, 1], [40, 129, 1], [41, 139, 2], [41, 162, 2], [42, 71, 1], [42, 190, 2], [42, 214, 1], [44, 204, 1], [44, 209, 1], [45, 64, 1], [46, 64, 1], [46, 74, 2], [46, 189, 2], [46, 224, 1], [47, 135, 2], [48, 71, 1], [48, 224, 1], [49, 101, 2], [50, 163, 2], [51, 215, 1], [52, 135, 2], [53, 188, 1], [58, 180, 1], [59, 64, 1], [60, 140, 1], [62, 144, 1], [63, 223, 1], [64, 59, 1], [64, 60, 1], [64, 183, 1], [64, 227, 1], [64, 228, 1], [65, 102, 1], [66, 64, 1], [67, 168, 2], [69, 112, 1], [69, 113, 1], [69, 115, 1], [70, 106, 1], [71, 97, 1], [71, 102, 1], [72, 65, 1], [74, 114, 1], [74, 116, 1], [74, 231, 1], [75, 127, 1], [78, 66, 1], [78, 240, 1], [79, 119, 2], [80, 240, 1], [83, 59, 1], [85, 65, 1], [86, 59, 2], [86, 68, 2], [86, 159, 2], [86, 184, 2], [87, 94, 2], [91, 183, 2], [92, 112, 1], [92, 116, 1], [93, 60, 2], [93, 63, 2], [94, 167, 2], [96, 47, 1], [96, 50, 1], [96, 164, 1], [96, 166, 2], [96, 226, 1], [96, 230, 2], [97, 63, 2], [97, 134, 2], [100, 62, 2], [100, 128, 2], [101, 58, 2], [103, 230, 1], [104, 62, 2], [109, 58, 2], [110, 240, 1], [112, 240, 1], [116, 92, 1], [118, 94, 2], [119, 55, 1], [122, 89, 2], [122, 229, 2], [124, 51, 2], [126, 146, 2], [130, 40, 1], [131, 89, 2], [131, 173, 2], [132, 87, 2], [132, 229, 2], [133, 43, 2], [133, 86, 2], [133, 88, 2], [134, 88, 2], [134, 176, 2], [134, 180, 2], [135, 143, 2], [138, 143, 2], [139, 42, 1], [139, 62, 2], [141, 64, 2], [144, 31, 1], [144, 35, 1], [146, 57, 2], [149, 59, 2], [153, 130, 1], [155, 45, 2], [155, 122, 2], [157, 47, 2], [157, 151, 2], [159, 127, 2], [160, 31, 1], [160, 34, 1], [160, 91, 2], [162, 93, 2], [163, 122, 2], [165, 185, 2], [166, 42, 2], [166, 127, 2], [169, 127, 2], [173, 123, 2], [173, 125, 2], [175, 65, 2], [175, 125, 2], [175, 227, 2], [176, 31, 1], [176, 32, 1], [176, 34, 1], [176, 35, 1], [176, 43, 2], [176, 47, 2], [176, 64, 2], [176, 226, 2], [179, 48, 2], [183, 110, 2], [187, 123, 2], [188, 110, 2], [189, 95, 2], [189, 222, 1], [190, 42, 2], [190, 47, 2], [191, 227, 1], [191, 230, 2], [192, 232, 1], [193, 48, 2], [194, 109, 2], [195, 108, 2], [195, 113, 1], [195, 211, 1], [196, 110, 2], [197, 165, 2], [197, 167, 2], [198, 42, 2], [198, 55, 2], [198, 187, 2], [200, 111, 2], [205, 168, 2], [206, 80, 2], [207, 44, 2], [208, 35, 1], [208, 36, 1], [208, 40, 1], [208, 118, 2], [208, 224, 1], [215, 40, 1], [215, 47, 2], [216, 111, 2], [220, 162, 2], [221, 32, 1], [221, 104, 1], [221, 108, 2], [223, 32, 1], [223, 158, 2], [224, 47, 1], [224, 50, 1], [224, 124, 2], [224, 224, 1], [225, 58, 2], [225, 61, 2], [228, 73, 2], [228, 108, 2], [233, 47, 1], [235, 58, 2], [236, 214, 2], [237, 32, 1], [239, 32, 1], [239, 40, 1], [239, 47, 2], [239, 53, 2], [240, 58, 2], [243, 58, 2], [243, 62, 2], [244, 64, 2], [244, 123, 1], [244, 131, 2], [247, 123, 2], [250, 205, 1], [252, 147, 2]]
    list3_4 = [[2, 171, 1], [4, 164, 2], [6, 151, 2], [7, 142, 1], [9, 162, 2], [10, 145, 1], [10, 191, 2], [12, 96, 1], [12, 191, 1], [13, 80, 1], [13, 138, 1], [14, 180, 1], [15, 80, 1], [17, 199, 1], [18, 96, 1], [18, 166, 1], [18, 199, 1], [20, 154, 2], [20, 166, 2], [21, 127, 2], [21, 141, 2], [21, 143, 2], [25, 134, 1], [27, 89, 1], [27, 207, 1], [28, 125, 1], [29, 80, 1], [29, 162, 2], [29, 191, 2], [30, 129, 1], [30, 139, 2], [32, 64, 1], [32, 66, 1], [33, 191, 2], [37, 64, 1], [38, 64, 1], [38, 142, 1], [38, 164, 2], [38, 208, 1], [41, 76, 1], [41, 101, 2], [42, 71, 1], [42, 135, 2], [42, 215, 1], [44, 189, 2], [45, 64, 1], [45, 182, 1], [46, 64, 1], [46, 224, 1], [48, 74, 1], [48, 95, 1], [48, 140, 1], [48, 168, 1], [48, 224, 1], [49, 195, 1], [51, 144, 1], [51, 185, 1], [52, 91, 1], [56, 103, 1], [59, 202, 1], [60, 65, 1], [60, 115, 1], [61, 107, 1], [62, 98, 1], [62, 102, 1], [63, 222, 1], [65, 116, 1], [66, 113, 1], [67, 64, 1], [69, 119, 2], [69, 126, 2], [72, 67, 1], [72, 186, 2], [74, 160, 2], [74, 223, 1], [76, 115, 2], [77, 185, 2], [78, 66, 1], [80, 94, 2], [81, 58, 1], [83, 66, 1], [83, 112, 1], [83, 223, 1], [85, 223, 1], [86, 135, 2], [88, 129, 2], [90, 58, 2], [94, 56, 1], [96, 47, 1], [96, 50, 1], [96, 60, 2], [96, 72, 1], [96, 224, 1], [98, 64, 1], [100, 222, 1], [102, 55, 1], [102, 57, 2], [102, 67, 1], [103, 24, 1], [104, 32, 1], [105, 59, 2], [109, 16, 1], [109, 56, 1], [109, 96, 2], [109, 222, 1], [110, 32, 1], [111, 16, 1], [112, 32, 1], [113, 52, 1], [114, 87, 2], [114, 147, 1], [116, 88, 2], [118, 177, 2], [119, 183, 2], [121, 40, 1], [121, 179, 2], [122, 92, 2], [123, 90, 2], [123, 223, 1], [124, 89, 2], [124, 91, 2], [125, 88, 2], [125, 90, 2], [125, 140, 2], [126, 43, 2], [126, 90, 2], [128, 31, 1], [128, 32, 1], [128, 50, 1], [130, 43, 2], [130, 140, 2], [132, 44, 2], [135, 44, 2], [135, 46, 1], [136, 227, 2], [137, 229, 2], [141, 226, 1], [141, 229, 2], [142, 61, 2], [143, 48, 1], [143, 153, 2], [144, 63, 2], [145, 131, 2], [146, 41, 1], [151, 44, 1], [151, 191, 2], [152, 40, 1], [156, 51, 2], [157, 229, 2], [160, 42, 1], [160, 43, 1], [165, 47, 1], [165, 127, 2], [170, 127, 2], [171, 45, 1], [171, 70, 2], [172, 72, 2], [172, 114, 2], [173, 218, 1], [174, 222, 1], [175, 229, 2], [176, 31, 1], [176, 32, 1], [176, 45, 2], [176, 115, 2], [177, 128, 2], [178, 48, 2], [180, 48, 1], [180, 100, 2], [182, 172, 2], [183, 172, 2], [184, 118, 1], [185, 45, 1], [185, 195, 2], [186, 114, 2], [188, 43, 2], [191, 229, 2], [192, 115, 2], [192, 176, 2], [193, 63, 2], [199, 43, 2], [199, 87, 2], [199, 222, 2], [199, 230, 2], [200, 232, 1], [201, 126, 1], [201, 222, 1], [205, 43, 2], [206, 119, 2], [206, 170, 2], [206, 223, 1], [206, 240, 1], [208, 119, 2], [208, 223, 1], [208, 240, 1], [209, 116, 2], [209, 166, 2], [210, 47, 2], [214, 47, 2], [216, 44, 2], [217, 48, 2], [217, 93, 1], [219, 111, 2], [223, 44, 2], [223, 220, 2], [223, 223, 1], [225, 131, 2], [226, 208, 1], [229, 68, 2], [230, 188, 1], [231, 42, 2], [231, 51, 2], [231, 224, 1], [232, 40, 1], [232, 68, 2], [232, 208, 2], [234, 142, 2], [236, 202, 1], [237, 48, 1], [237, 70, 2], [238, 183, 2], [238, 224, 1], [239, 48, 1], [239, 216, 1], [239, 224, 1], [240, 157, 2], [241, 182, 2], [242, 79, 2], [249, 61, 2], [249, 207, 1], [251, 178, 2], [252, 80, 2], [253, 178, 2], [254, 181, 2], [254, 186, 2]]

    test_list = [list1_1,list1_2,list1_3,list1_4,list2_1,list2_2,
                 list2_3,list2_4,list3_1,list3_2,list3_3,list3_4]

    for i in range(len(test_list)):
            input_point_list = samplingForPun(test_list[i],20)
            for j in range(len(test_list)):
                print("----------------------------")
                print("input: ", i,"\ngiven: ",j)
                print("----------------------------")
                given_point_list = samplingForPun(test_list[j],20)
                s = ae2.match(input_point_list, given_point_list)
                print(s)
                print("----------------------------")
                
 
    
    cv2.waitKey()
    cv2.destroyAllWindows()

#-----------------------------
